Given an integer sorted array (sorted in increasing order) and an element x, find the x in given array using binary search. Return the index of x.
Return -1 if x is not present in the given array.
Note : If given array size is even, take first mid.
Input format :

Line 1 : Array size

Line 2 : Array elements (separated by space)

Line 3 : x (element to be searched)

Sample Input :
6
2 3 4 5 6 8 
5 
Sample Output:
3 


int binary_search(int input[],int start,int end, int key)
{
    if(start<=end)
    {
        int mid = start+(end-start)/2;
        
        if(input[mid]==key)
        {
            return mid;
        }
        else if(input[mid]<key)
        {
            return binary_search(input,mid+1,end,key);
        }
        else
        {
            return binary_search(input,start,mid-1,key);
        }
    }
    return -1;
}
int binarySearch(int input[], int size, int element) {
    // Write your code here
    
    return binary_search(input,0,size-1,element);
}
